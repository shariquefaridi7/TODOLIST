import { createSlice } from "@reduxjs/toolkit";

// Create a Redux slice named 'todos'
const todoSlice = createSlice({
  name: 'todos', // Slice name
  initialState: {
    items: JSON.parse(localStorage.getItem('todos')) || [], // Initialize state with todos fetched from localStorage
  },
  reducers: {
    // Reducer to add a new todo item
    addItem: (state, action) => {
      const newItem = {
        id: Date.now(), // Generate unique id for the new item
        text: action.payload, // Get the text from the action payload
        completed: false, // Add completed field with default value as false
      };
      state.items.push(newItem); // Push the new item to the state
      localStorage.setItem('todos', JSON.stringify(state.items)); // Update localStorage with the updated todos
    },
    // Reducer to delete a todo item
    deleteItem: (state, action) => {
      const itemId = action.payload; // Get the id of the item to be deleted from the action payload
      state.items = state.items.filter(item => item.id !== itemId); // Filter out the item with the given id
      localStorage.setItem('todos', JSON.stringify(state.items)); // Update localStorage with the updated todos
    },
    // Reducer to toggle completion status of a todo item
    toggleCompletion: (state, action) => {
      const itemId = action.payload; // Get the id of the item to toggle completion status from the action payload
      const item = state.items.find(item => item.id === itemId); // Find the item with the given id
      if (item) {
        item.completed = !item.completed; // Toggle the completion status
        localStorage.setItem('todos', JSON.stringify(state.items)); // Update localStorage with the updated todos
      }
    },
  }
});

// Export actions generated by the slice
export const { addItem, deleteItem, toggleCompletion } = todoSlice.actions;

// Selector function to select todos from the state
export const selectTodos = state => state.todos.items;

// Export the reducer function generated by the slice
export default todoSlice.reducer;
